name: Unit Tests

on: [push]

jobs:
  build-linux:
    name: CI py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment:
            anaconda-test-env-py-${{ matrix.python-version }}
        auto-update-conda: true
        channel-priority: true
        channels: defaults,conda-forge,prjemian
        # environment-file: environment.yml
        mamba-version: "*"
        python-version: ${{ matrix.python-version }}
        use-only-tar-bz2: true  # required for caching
    - shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
        conda env list
        printenv | sort

    - name: Start EPICS IOCs in Docker
      run: |
        bash ./.github/scripts/start_xxx.sh gp
        bash ./.github/scripts/start_adsim.sh ad
        docker ps -a

    # $CONDA is an environment variable pointing to the
    # root of the miniconda directory

    - name: Install Python package requirements
      run: |
        $CONDA/bin/conda env update --file environment.yml --name $ENV_NAME
        $CONDA/bin/conda install pytest --name $ENV_NAME
        $CONDA/bin/conda list -r --name $ENV_NAME
      env:
        PY_VER: ${{ matrix.python-version }}
        ENV_NAME: anaconda-test-env-py-${{ matrix.python-version }}

    - name: Confirm EPICS IOC is available via caget
      run: |
        source $CONDA/bin/activate $ENV_NAME
        caget "${PV}"
        caget ad:cam1:Acquire_RBV
      env:
        PY_VER: ${{ matrix.python-version }}
        ENV_NAME: anaconda-test-env-py-${{ matrix.python-version }}
        PV: gp:UPTIME

    - name: Confirm EPICS IOC is available via PyEpics
      run: |
        source $CONDA/bin/activate $ENV_NAME
        python -c "import epics; print(epics.caget('${PV}'))"
      env:
        PY_VER: ${{ matrix.python-version }}
        ENV_NAME: anaconda-test-env-py-${{ matrix.python-version }}
        PV: gp:UPTIME

    - name: Confirm EPICS IOC is available via ophyd
      run: |
        source $CONDA/bin/activate $ENV_NAME
        CMD="import ophyd"
        CMD+="; up = ophyd.EpicsSignalRO('${PV}', name='up')"
        CMD+="; up.wait_for_connection()"
        CMD+="; print(up.get())"
        python -c "${CMD}"
      env:
        PY_VER: ${{ matrix.python-version }}
        ENV_NAME: anaconda-test-env-py-${{ matrix.python-version }}
        PV: gp:UPTIME

    - name: install test data catalogs
      shell: bash -l {0}
      run: |
        ./tests/unpack.sh

    - name: Run tests with pytest
      run: |
        source $CONDA/bin/activate $ENV_NAME
        pytest -vvv ./tests ./apstools/beamtime/tests
      env:
        PY_VER: ${{ matrix.python-version }}
        ENV_NAME: anaconda-test-env-py-${{ matrix.python-version }}


# These actions were done by travis after success of previous steps
# TODO: coverage
# https://github.com/marketplace/actions/codecov
# TODO: coveralls
# https://github.com/marketplace/actions/coveralls-github-action
