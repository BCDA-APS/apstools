name: Unit Tests & Code Coverage

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash

jobs:

  lint:
    name: Code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          flake8

  test-matrix:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        # python-version: ['3.7', '3.8', '3.9', '3.10']
        python-version: ['3.7', '3.8', '3.9']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2

    - name: Create Python ${{ matrix.python-version }} environment
      uses: mamba-org/provision-with-micromamba@v12
      with:
        cache-env: true
        cache-env-key: env-key-${{ matrix.python-version }}
        environment-file: environment.yml
        environment-name: anaconda-test-env-py-${{ matrix.python-version }}

    - name: Initial diagnostics
      run: |
        micromamba info
        micromamba list
        conda config --show-sources
        conda config --show
        micromamba env list
        printenv | sort

    - name: Start EPICS IOCs in Docker
      run: |
        bash ./.github/scripts/start_xxx.sh gp
        bash ./.github/scripts/start_adsim.sh ad
        docker ps -a
        ls -lAFgh /tmp/docker_ioc/iocad/
        ls -lAFgh /tmp/docker_ioc/iocgp/

    - name: Install Python testing packages
      shell: bash -l {0}
      run: |
        micromamba install pytest coverage coveralls

    - name: Confirm EPICS IOC is available via caget
      run: |
        which caget
        caget gp:UPTIME
        caget ad:cam1:Acquire_RBV

    - name: Confirm EPICS IOC is available via PyEpics
      run: |
        python -c "import epics; print(epics.caget('gp:UPTIME'))"

    - name: Confirm EPICS IOC is available via ophyd
      run: |
        CMD="import ophyd"
        CMD+="; up = ophyd.EpicsSignalRO('gp:UPTIME', name='up')"
        CMD+="; up.wait_for_connection()"
        CMD+="; print(up.get())"
        python -c "${CMD}"

    - name: install test data catalogs
      run: |
        ./resources/unpack.sh

    - name: Diagnostics
      run: |
        df -HT
        micromamba list

    - name: Run tests with pytest & coverage
      run: |
        # proceed as in hklpy
        coverage run --concurrency=thread --parallel-mode -m pytest -vvv .
        coverage combine
        coverage report --precision 3

    - name: Upload to coveralls
      # https://github.com/TheKevJames/coveralls-python
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
